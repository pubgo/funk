// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.3
// source: errorpb/errors.proto

package errorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string            `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Detail string            `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	Stack  string            `protobuf:"bytes,3,opt,name=stack,proto3" json:"stack,omitempty"`
	Tags   map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Id     *string           `protobuf:"bytes,5,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ErrMsg) Reset() {
	*x = ErrMsg{}
	mi := &file_errorpb_errors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrMsg) ProtoMessage() {}

func (x *ErrMsg) ProtoReflect() protoreflect.Message {
	mi := &file_errorpb_errors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrMsg.ProtoReflect.Descriptor instead.
func (*ErrMsg) Descriptor() ([]byte, []int) {
	return file_errorpb_errors_proto_rawDescGZIP(), []int{0}
}

func (x *ErrMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ErrMsg) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *ErrMsg) GetStack() string {
	if x != nil {
		return x.Stack
	}
	return ""
}

func (x *ErrMsg) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ErrMsg) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type ErrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GRPC code corresponding to HTTP status code, which can be converted to each
	// other
	StatusCode Code `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=errors.Code" json:"status_code,omitempty"`
	// Business Code, e.g. 200001
	Code int32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// Error name, e.g. lava.v1.err_code.auth_token_not_found
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Error message, e.g. token not found
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Error detail include request or other user defined information
	Details []*anypb.Any `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
	Id      *string      `protobuf:"bytes,6,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ErrCode) Reset() {
	*x = ErrCode{}
	mi := &file_errorpb_errors_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrCode) ProtoMessage() {}

func (x *ErrCode) ProtoReflect() protoreflect.Message {
	mi := &file_errorpb_errors_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrCode.ProtoReflect.Descriptor instead.
func (*ErrCode) Descriptor() ([]byte, []int) {
	return file_errorpb_errors_proto_rawDescGZIP(), []int{1}
}

func (x *ErrCode) GetStatusCode() Code {
	if x != nil {
		return x.StatusCode
	}
	return Code_OK
}

func (x *ErrCode) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrCode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ErrCode) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrCode) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ErrCode) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type ErrTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Operation string `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	Service   string `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	Version   string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ErrTrace) Reset() {
	*x = ErrTrace{}
	mi := &file_errorpb_errors_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrTrace) ProtoMessage() {}

func (x *ErrTrace) ProtoReflect() protoreflect.Message {
	mi := &file_errorpb_errors_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrTrace.ProtoReflect.Descriptor instead.
func (*ErrTrace) Descriptor() ([]byte, []int) {
	return file_errorpb_errors_proto_rawDescGZIP(), []int{2}
}

func (x *ErrTrace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ErrTrace) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ErrTrace) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ErrTrace) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  *ErrCode  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Trace *ErrTrace `protobuf:"bytes,2,opt,name=trace,proto3" json:"trace,omitempty"`
	Msg   *ErrMsg   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_errorpb_errors_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_errorpb_errors_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_errorpb_errors_proto_rawDescGZIP(), []int{3}
}

func (x *Error) GetCode() *ErrCode {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *Error) GetTrace() *ErrTrace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Error) GetMsg() *ErrMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type ErrWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags   map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Caller string            `protobuf:"bytes,2,opt,name=caller,proto3" json:"caller,omitempty"`
	Stacks []string          `protobuf:"bytes,3,rep,name=stacks,proto3" json:"stacks,omitempty"`
	Error  *anypb.Any        `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ErrWrap) Reset() {
	*x = ErrWrap{}
	mi := &file_errorpb_errors_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrWrap) ProtoMessage() {}

func (x *ErrWrap) ProtoReflect() protoreflect.Message {
	mi := &file_errorpb_errors_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrWrap.ProtoReflect.Descriptor instead.
func (*ErrWrap) Descriptor() ([]byte, []int) {
	return file_errorpb_errors_proto_rawDescGZIP(), []int{4}
}

func (x *ErrWrap) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ErrWrap) GetCaller() string {
	if x != nil {
		return x.Caller
	}
	return ""
}

func (x *ErrWrap) GetStacks() []string {
	if x != nil {
		return x.Stacks
	}
	return nil
}

func (x *ErrWrap) GetError() *anypb.Any {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_errorpb_errors_proto protoreflect.FileDescriptor

var file_errorpb_errors_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x70, 0x62, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x12,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x01,
	0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x26, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x45,
	0x72, 0x72, 0x57, 0x72, 0x61, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x57, 0x72, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x62, 0x67, 0x6f, 0x2f, 0x66,
	0x75, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x70,
	0x62, 0x3b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_errorpb_errors_proto_rawDescOnce sync.Once
	file_errorpb_errors_proto_rawDescData = file_errorpb_errors_proto_rawDesc
)

func file_errorpb_errors_proto_rawDescGZIP() []byte {
	file_errorpb_errors_proto_rawDescOnce.Do(func() {
		file_errorpb_errors_proto_rawDescData = protoimpl.X.CompressGZIP(file_errorpb_errors_proto_rawDescData)
	})
	return file_errorpb_errors_proto_rawDescData
}

var file_errorpb_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_errorpb_errors_proto_goTypes = []any{
	(*ErrMsg)(nil),    // 0: errors.ErrMsg
	(*ErrCode)(nil),   // 1: errors.ErrCode
	(*ErrTrace)(nil),  // 2: errors.ErrTrace
	(*Error)(nil),     // 3: errors.Error
	(*ErrWrap)(nil),   // 4: errors.ErrWrap
	nil,               // 5: errors.ErrMsg.TagsEntry
	nil,               // 6: errors.ErrWrap.TagsEntry
	(Code)(0),         // 7: errors.Code
	(*anypb.Any)(nil), // 8: google.protobuf.Any
}
var file_errorpb_errors_proto_depIdxs = []int32{
	5, // 0: errors.ErrMsg.tags:type_name -> errors.ErrMsg.TagsEntry
	7, // 1: errors.ErrCode.status_code:type_name -> errors.Code
	8, // 2: errors.ErrCode.details:type_name -> google.protobuf.Any
	1, // 3: errors.Error.code:type_name -> errors.ErrCode
	2, // 4: errors.Error.trace:type_name -> errors.ErrTrace
	0, // 5: errors.Error.msg:type_name -> errors.ErrMsg
	6, // 6: errors.ErrWrap.tags:type_name -> errors.ErrWrap.TagsEntry
	8, // 7: errors.ErrWrap.error:type_name -> google.protobuf.Any
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_errorpb_errors_proto_init() }
func file_errorpb_errors_proto_init() {
	if File_errorpb_errors_proto != nil {
		return
	}
	file_errorpb_code_proto_init()
	file_errorpb_errors_proto_msgTypes[0].OneofWrappers = []any{}
	file_errorpb_errors_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_errorpb_errors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_errorpb_errors_proto_goTypes,
		DependencyIndexes: file_errorpb_errors_proto_depIdxs,
		MessageInfos:      file_errorpb_errors_proto_msgTypes,
	}.Build()
	File_errorpb_errors_proto = out.File
	file_errorpb_errors_proto_rawDesc = nil
	file_errorpb_errors_proto_goTypes = nil
	file_errorpb_errors_proto_depIdxs = nil
}
