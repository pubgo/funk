// Code generated by protoc-gen-lava-errors. DO NOT EDIT.
// versions:
// - protoc-gen-lava-errors v0.0.4
// - protoc                 v3.19.4
// source: errorpb/status.proto

package errorpb

import (
	errors "github.com/pubgo/funk/errors"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var ErrCodeOK = errors.NewCode(Code_OK).SetStatus("status.code.ok").SetReason("ok")
var ErrCodeCanceled = errors.NewCode(Code_Canceled).SetStatus("status.code.canceled").SetReason("canceled")
var ErrCodeUnknown = errors.NewCode(Code_Unknown).SetStatus("status.code.unknown").SetReason("unknown")
var ErrCodeInvalidArgument = errors.NewCode(Code_InvalidArgument).SetStatus("status.code.invalid_argument").SetReason("invalidargument")
var ErrCodeDeadlineExceeded = errors.NewCode(Code_DeadlineExceeded).SetStatus("status.code.deadline_exceeded").SetReason("deadlineexceeded")
var ErrCodeNotFound = errors.NewCode(Code_NotFound).SetStatus("status.code.not_found").SetReason("notfound")
var ErrCodeAlreadyExists = errors.NewCode(Code_AlreadyExists).SetStatus("status.code.already_exists").SetReason("alreadyexists")
var ErrCodePermissionDenied = errors.NewCode(Code_PermissionDenied).SetStatus("status.code.permission_denied").SetReason("permissiondenied")
var ErrCodeResourceExhausted = errors.NewCode(Code_ResourceExhausted).SetStatus("status.code.resource_exhausted").SetReason("resourceexhausted")
var ErrCodeFailedPrecondition = errors.NewCode(Code_FailedPrecondition).SetStatus("status.code.failed_precondition").SetReason("failedprecondition")
var ErrCodeAborted = errors.NewCode(Code_Aborted).SetStatus("status.code.aborted").SetReason("aborted")
var ErrCodeOutOfRange = errors.NewCode(Code_OutOfRange).SetStatus("status.code.out_of_range").SetReason("outofrange")
var ErrCodeUnimplemented = errors.NewCode(Code_Unimplemented).SetStatus("status.code.unimplemented").SetReason("unimplemented")
var ErrCodeInternal = errors.NewCode(Code_Internal).SetStatus("status.code.internal").SetReason("internal")
var ErrCodeUnavailable = errors.NewCode(Code_Unavailable).SetStatus("status.code.unavailable").SetReason("unavailable")
var ErrCodeDataLoss = errors.NewCode(Code_DataLoss).SetStatus("status.code.data_loss").SetReason("dataloss")
var ErrCodeUnauthenticated = errors.NewCode(Code_Unauthenticated).SetStatus("status.code.unauthenticated").SetReason("unauthenticated")
var ErrCodeTooManyRequests = errors.NewCode(Code_TooManyRequests).SetStatus("status.code.too_many_requests").SetReason("toomanyrequests")
